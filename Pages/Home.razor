<!-- Calculadora.Frontend/Pages/Home.razor -->
@page "/"
@using System.Globalization  @* <-- AÑADE ESTA LÍNEA *@
@using Calculadora.Frontend.Models
@using Calculadora.Frontend.Services
@inject IRegistroService RegistroService

<PageTitle>Calculadora</PageTitle>

<h1>Calculadora con Registro</h1>

<div class="row">
    <!-- Columna Izquierda: La Calculadora Funcional -->
    <div class="col-md-5">
        <div class="card">
            <div class="card-body">
                <!-- Pantalla de la Calculadora -->
                <div class="mb-3">
                    <input type="text" class="form-control text-end fs-4" @bind="_display" readonly />
                </div>

                <!-- Botones de la Calculadora -->
            <div class="d-grid gap-2">
                <div class="row g-2">
                    <div class="col-9"><button class="btn btn-danger w-100" @onclick="OnClearClick">C</button></div>
                    <div class="col-3"><button class="btn btn-secondary w-100" @onclick='() => OnOperatorClick("/")'>/</button></div>
                </div>
                <div class="row g-2">
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("7")'>7</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("8")'>8</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("9")'>9</button></div>
                    <div class="col-3"><button class="btn btn-secondary w-100" @onclick='() => OnOperatorClick("*")'>*</button></div>
                </div>
                <div class="row g-2">
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("4")'>4</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("5")'>5</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("6")'>6</button></div>
                    <div class="col-3"><button class="btn btn-secondary w-100" @onclick='() => OnOperatorClick("-")'>-</button></div>
                </div>
                <div class="row g-2">
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("1")'>1</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("2")'>2</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("3")'>3</button></div>
                    <div class="col-3"><button class="btn btn-secondary w-100" @onclick='() => OnOperatorClick("+")'>+</button></div>
                </div>
                 <div class="row g-2">
                    <div class="col-6"><button class="btn btn-light w-100" @onclick='() => OnNumberClick("0")'>0</button></div>
                    <div class="col-3"><button class="btn btn-light w-100" @onclick='() => OnNumberClick(".")'>.</button></div>
                    <div class="col-3"><button class="btn btn-primary w-100" @onclick="OnEqualsClick">=</button></div>
                </div>
            </div>
        </div>
    </div>
        
        <!-- Sección para Guardar el Resultado -->
        <div class="card mt-3">
             <div class="card-body">
                <h5 class="card-title">Guardar Resultado</h5>
                <div class="mb-3">
                    <label class="form-label">Nombre Descriptivo</label>
                    <input type="text" class="form-control" placeholder="Ej: Gastos de Enero" @bind="_nombreDescriptivo" />
                </div>
                <button class="btn btn-success w-100" @onclick="GuardarCalculo" disabled="@(_resultadoParaGuardar == null)">
                    Guardar "@_nombreDescriptivo"
                </button>
            </div>
        </div>
    </div>

    <!-- Columna Derecha: El Historial (sin cambios) -->
    <div class="col-md-7">
        <HistorialCalculos Registros="_historial" />
    </div>
</div>


@code {
    // ---- Variables para la Lógica de Datos (sin cambios) ----
    private List<RegistroCalculoDto> _historial;
    private string _nombreDescriptivo = "";
    private decimal? _resultadoParaGuardar;

    // ---- Variables para la Lógica de la Calculadora (sin cambios) ----
    private string _display = "0";
    private decimal _operand1 = 0;
    private string _operator = null;
    private bool _isNewNumber = true;

    // ---- Métodos de Datos (sin cambios) ----
    protected override async Task OnInitializedAsync()
    {
        await CargarHistorial();
    }

    private async Task CargarHistorial()
    {
        _historial = await RegistroService.ObtenerRegistrosAsync();
    }

    private async Task GuardarCalculo()
    {
        if (string.IsNullOrWhiteSpace(_nombreDescriptivo) || _resultadoParaGuardar == null) return;

        var nuevoRegistro = new GuardarRegistroRequest(_nombreDescriptivo, _resultadoParaGuardar.Value);
        await RegistroService.GuardarRegistroAsync(nuevoRegistro);

        _nombreDescriptivo = "";
        _resultadoParaGuardar = null;
        await CargarHistorial();
    }
    
    // ---- Métodos para la Lógica de la Calculadora (CORREGIDOS) ----
    private void OnNumberClick(string number)
    {
        if (_isNewNumber)
        {
            _display = number;
            _isNewNumber = false;
        }
        else
        {
            if (number == "." && _display.Contains(".")) return;
            _display += number;
        }
    }

    private void OnOperatorClick(string op)
    {
        if (!_isNewNumber)
        {
            OnEqualsClick();
        }

        // CAMBIO 1: Usar Cultura Invariante
        _operand1 = decimal.Parse(_display, CultureInfo.InvariantCulture);
        _operator = op;
        _isNewNumber = true;
    }

    private void OnEqualsClick()
    {
        if (_operator == null) return;

        // CAMBIO 2: Usar Cultura Invariante
        decimal operand2 = decimal.Parse(_display, CultureInfo.InvariantCulture);
        decimal result = 0;

        switch (_operator)
        {
            case "+": result = _operand1 + operand2; break;
            case "-": result = _operand1 - operand2; break;
            case "*": result = _operand1 * operand2; break;
            case "/":
                if (operand2 != 0)
                {
                    result = _operand1 / operand2;
                }
                else
                {
                    _display = "Error";
                    return;
                }
                break;
        }

        _display = result.ToString(CultureInfo.InvariantCulture); // También es buena práctica usarlo al convertir a string
        _resultadoParaGuardar = result;
        _operator = null;
        _isNewNumber = true;
    }

    private void OnClearClick()
    {
        _display = "0";
        _operand1 = 0;
        _operator = null;
        _isNewNumber = true;
        _resultadoParaGuardar = null;
    }
}